class {{ class_name }}Controller < ApplicationController
  def index
    {{ name | pluralize }} = {{ class_name }}.all.to_a
    render("index.{{ language }}")
  end

  def show
    if {{ name }} = {{ class_name }}.find(params["id"])
      render("show.{{ language }}")
    else
      flash["warning"] = "{{ class_name }} with ID #{params["id"]} Not Found"
      redirect_to "/{{ name | pluralize }}"
    end
  end

  def new
    {{ name }} = {{ class_name }}.build
    render("new.{{ language }}")
  end

  def create
    {{ name }} = {{ class_name }}.build({{ name }}_params)
    if {{ name }}.save
      flash["success"] = "Created {{ class_name }} successfully."
      redirect_to "/{{ name | pluralize }}"
    else
      flash["danger"] = "Could not create {{ class_name }}!"
      render("new.{{ language }}")
    end
  end

  def edit
    if {{ name }} = {{ class_name }}.find(params["id"])
      render("edit.{{ language }}")
    else
      flash["warning"] = "{{ class_name }} with ID #{params["id"]} Not Found"
      redirect_to "/{{ name | pluralize }}"
    end
  end

  def update
    if {{ name }} = {{ class_name }}.find(params["id"])
      if {{ name }}.update({{ name }}_params)
        flash["success"] = "Updated {{ class_name }} successfully."
        redirect_to "/{{ name | pluralize }}"
      else
        flash["danger"] = "Could not update {{ class_name }}!"
        render("edit.{{ language }}")
      end
    else
      flash["warning"] = "{{ class_name }} with ID #{params["id"]} Not Found"
      redirect_to "/{{ name | pluralize }}"
    end
  end

  def destroy
    if {{ name }} = {{ class_name }}.find(params["id"])
      {{ name }}.destroy
    else
      flash["warning"] = "{{ class_name }} with ID #{params["id"]} Not Found"
    end
    redirect_to "/{{ name | pluralize }}"
  end

  def {{ name }}_params
    {{ class_name }}.build_params(
      params.validation do
{% for field in visible_fields %}
        required(:{{ field.name }}{% if field.type == "reference" %}_id{% endif %} ) { |f| !f.nil? }
{% endfor %}
      end.validate!
    )
  end
end
